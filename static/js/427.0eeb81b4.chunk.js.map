{"version":3,"file":"static/js/427.0eeb81b4.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/InputItem/InputItem.styled.jsx","components/InputItem/InputItem.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItems.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 600px;\n  height: fit-content;\n  min-height: 20vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 24px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: #5f5c59 solid 2px;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n  font-size: 24px;\n  color: #010101;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  font-weight: bold;\n  font-size: 24px;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 20px;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n","import PropTypes from 'prop-types';\nimport { Input } from './InputItem.styled';\n\nexport const InputItem = ({\n  type = 'text',\n  name,\n  placeholder,\n  pattern,\n  title,\n  onChange,\n  value,\n}) => {\n  return (\n    <Input\n      onChange={onChange}\n      value={value}\n      placeholder={placeholder}\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required\n    />\n  );\n};\n\nInputItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ButtonForm } from 'components/ButtonForm/ButtonForm';\nimport { MdPersonAddAlt } from 'react-icons/md';\nimport { Label, Form } from './ContactForm.styled';\nimport { InputItem } from 'components/InputItem/InputItem';\nimport { addContact } from 'redux/contactsOperations';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from 'redux/selectors';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { notifySettings } from 'utils/notifySettings';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const includesName = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (includesName) {\n      Notiflix.Notify.warning(`${name} is already in contacts` , notifySettings);\n    } else {\n      dispatch(addContact({ name, number }));\n      Notiflix.Notify.success(\n        `${name} was successfully added to your contacts` , notifySettings\n      );\n    }\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputItem\n          onChange={onInputChange}\n          value={name}\n          name=\"name\"\n          placeholder=\"Enter contact`s name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </Label>\n      <Label>\n        Number\n        <InputItem\n          onChange={onInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter contact`s number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </Label>\n      <ButtonForm\n        type=\"submit\"\n        icon={MdPersonAddAlt}\n        status=\"add\"\n        text=\"Add contact\"\n      />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  margin-top: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  min-width: 600px;\n  display: flex;\n  font-weight: bold;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n  padding: 24px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: #5f5c59 solid 2px;\n`;\n\nexport const ListItemData = styled.p`\n  font-size: 24px;\n  margin-right: 36px;\n`;\n","import PropTypes from 'prop-types';\nimport { MdPersonRemoveAlt1 } from 'react-icons/md';\nimport { ListItem, ListItemData } from './ContactItems.styled';\nimport { ButtonForm } from 'components/ButtonForm/ButtonForm';\n\nexport const ContactItem = ({ id, name, number, onDeleteBtnClick }) => {\n  return (\n    <ListItem>\n      <ListItemData>\n        {name}: {number}\n      </ListItemData>\n      <ButtonForm\n        icon={MdPersonRemoveAlt1}\n        type=\"button\"\n        status=\"delete\"\n        text=\"Delete contact\"\n        onClick={() => onDeleteBtnClick(id, name)}\n      />\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteBtnClick: PropTypes.func.isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { deleteContact, fetchContacts } from 'redux/contactsOperations';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { notifySettings } from 'utils/notifySettings';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filterContacts = () => {\n    const query = filter.toLocaleLowerCase();\n\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(query)\n    );\n\n    if (query && !filteredContacts.length) {\n      Notiflix.Notify.warning('No contacts matching your request', notifySettings);\n      return [];\n    }\n    return filteredContacts;\n  };\n\n  const handleDeleteContact = (id, name) => {\n    dispatch(deleteContact(id));\n    Notiflix.Notify.info(`${name} was successfully deleted from your contacts`, notifySettings);\n  };\n\n  return (\n    <List>\n      {filterContacts().map(contact => {\n        return (\n          <ContactItem\n            id={contact.id}\n            key={contact.id}\n            name={contact.name}\n            number={contact.number}\n            onDeleteBtnClick={() =>\n              handleDeleteContact(contact.id, contact.name)\n            }\n          />\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  min-width: 600px;\n  display: flex;\n  justify-content: stretch;\n  align-items: center;\n  font-size: 32px;\n  color: #010101;\n  padding: 24px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: #5f5c59 solid 2px;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n`;","import styled from 'styled-components';\nimport { DebounceInput } from 'react-debounce-input';\nimport { FilterWrapper } from './Filter.styled';\nimport { Label } from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nconst FilterInput = styled(DebounceInput)`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 20px;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <FilterWrapper>\n      <Label>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter contact to search\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.target.value))}\n          debounceTimeout={500}\n        />\n      </Label>\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding: 0 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  flex-direction: column;\n  color: #010101;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 42px;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 0 62px;\n  }\n`;\n\nexport const BlockWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SubHeader = styled.h2`\n  font-size: 16px;\n  text-transform: uppercase;\n  margin-top: 0;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 28px;\n  }\n`;","import ScrollToTop from 'react-scroll-up';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/selectors';\nimport { Container, SubHeader, BlockWrapper } from './Contacts.styled';\nimport Arrow from '../../images/arrowUp.png';\n\nexport const Contacts = () => {\n  const loader = useSelector(selectIsLoading);\n  return (\n    <Container>\n      {loader && <Loader />}\n      <BlockWrapper>\n        <SubHeader>Add new contact</SubHeader>\n        <ContactForm />\n      </BlockWrapper>\n      <BlockWrapper>\n        <SubHeader>Your contacts</SubHeader>\n        <Filter />\n        <ContactList />\n      </BlockWrapper>\n      <ScrollToTop\n        showUnder={160}\n        style={{\n          bottom: 40,\n          right: 40,\n        }}\n      >\n        <img alt=\"arrow up\" width=\"35\" srcSet={Arrow} />\n      </ScrollToTop>\n    </Container>\n  );\n};\nexport default Contacts;"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","InputItem","_ref","_ref$type","type","name","placeholder","pattern","title","onChange","value","_jsx","required","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","onInputChange","event","target","resetForm","_jsxs","onSubmit","preventDefault","find","contact","toLocaleLowerCase","Notiflix","concat","notifySettings","addContact","children","ButtonForm","icon","MdPersonAddAlt","status","text","List","ListItem","ListItemData","ContactItem","id","onDeleteBtnClick","MdPersonRemoveAlt1","onClick","ContactList","useEffect","fetchContacts","filter","selectFilter","query","filteredContacts","includes","length","filterContacts","map","deleteContact","FilterWrapper","FilterInput","DebounceInput","Filter","e","filterContact","debounceTimeout","Container","BlockWrapper","SubHeader","_templateObject3","Contacts","loader","selectIsLoading","Loader","ScrollToTop","showUnder","style","bottom","right","alt","width","srcSet"],"sourceRoot":""}