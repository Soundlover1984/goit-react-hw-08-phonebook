{"version":3,"file":"static/js/267.7e3760ed.chunk.js","mappings":"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","sources":["components/ButtonForm/ButtonForm.styled.jsx","components/ButtonForm/ButtonForm.jsx","components/ContactForm/ContactForm.styled.jsx","components/InputItem/InputItem.styled.jsx","components/InputItem/InputItem.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItems.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnElement = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  padding: 8px 16px;\n  font-size: 20px;\n  font-weight: bold;\n  border: #5f5c59 solid 2px;\n  background-color: #791e6b9d;\n  box-shadow: 0px 12px 8px 4px #cab1b14d;\n  transform: scale(1);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    background-color: ${props =>\n      props.status === 'add'\n        ? 'rgba(45, 196, 4, 0.7)'\n        : 'rgba(248, 4, 4, 0.797)'};\n    box-shadow: 0px 14px 6px 4px #cab1b98c;\n  }\n  &:active {\n    transform: scale(1.2);\n  }\n  & > svg {\n    margin-right: 8px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BtnElement } from './ButtonForm.styled';\n\nexport const ButtonForm = ({\n  text,\n  status,\n  disabled = false,\n  icon: Icon = null,\n  type = 'button',\n  onClick = null,\n  onSubmit = null,\n}) => {\n  return (\n    <BtnElement\n      status={status}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n      onSubmit={onSubmit}\n    >\n      {Icon && <Icon></Icon>}\n      {text}\n    </BtnElement>\n  );\n};\n\nButtonForm.propTypes = {\n  icon: PropTypes.any,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string,\n  onClick: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 600px;\n  height: fit-content;\n  min-height: 20vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 24px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: #5f5c59 solid 2px;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n  font-size: 24px;\n  color: #010101;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  font-weight: bold;\n  font-size: 24px;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 20px;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n","import PropTypes from 'prop-types';\nimport { Input } from './InputItem.styled';\n\nexport const InputItem = ({\n  type = 'text',\n  name,\n  placeholder,\n  pattern,\n  title,\n  onChange,\n  value,\n}) => {\n  return (\n    <Input\n      onChange={onChange}\n      value={value}\n      placeholder={placeholder}\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required\n    />\n  );\n};\n\nInputItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ButtonForm } from 'components/ButtonForm/ButtonForm';\nimport { MdPersonAddAlt } from 'react-icons/md';\nimport { Label, Form } from './ContactForm.styled';\nimport { InputItem } from 'components/InputItem/InputItem';\nimport { addContact } from 'redux/contactsOperations';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from 'redux/selectors';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { notifySettings } from 'utils/notifySettings';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const includesName = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (includesName) {\n      Notiflix.Notify.warning(`${name} is already in contacts` , notifySettings);\n    } else {\n      dispatch(addContact({ name, number }));\n      Notiflix.Notify.success(\n        `${name} was successfully added to your contacts` , notifySettings\n      );\n    }\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputItem\n          onChange={onInputChange}\n          value={name}\n          name=\"name\"\n          placeholder=\"Enter contact`s name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </Label>\n      <Label>\n        Number\n        <InputItem\n          onChange={onInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter contact`s number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </Label>\n      <ButtonForm\n        type=\"submit\"\n        icon={MdPersonAddAlt}\n        status=\"add\"\n        text=\"Add contact\"\n      />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  margin-top: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  min-width: 600px;\n  display: flex;\n  font-weight: bold;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n  padding: 24px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: #5f5c59 solid 2px;\n`;\n\nexport const ListItemData = styled.p`\n  font-size: 24px;\n  margin-right: 36px;\n`;\n","import PropTypes from 'prop-types';\nimport { MdPersonRemoveAlt1 } from 'react-icons/md';\nimport { ListItem, ListItemData } from './ContactItems.styled';\nimport { ButtonForm } from 'components/ButtonForm/ButtonForm';\n\nexport const ContactItem = ({ id, name, number, onDeleteBtnClick }) => {\n  return (\n    <ListItem>\n      <ListItemData>\n        {name}: {number}\n      </ListItemData>\n      <ButtonForm\n        icon={MdPersonRemoveAlt1}\n        type=\"button\"\n        status=\"delete\"\n        text=\"Delete contact\"\n        onClick={() => onDeleteBtnClick(id, name)}\n      />\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteBtnClick: PropTypes.func.isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { deleteContact, fetchContacts } from 'redux/contactsOperations';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { notifySettings } from 'utils/notifySettings';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filterContacts = () => {\n    const query = filter.toLocaleLowerCase();\n\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(query)\n    );\n\n    if (query && !filteredContacts.length) {\n      Notiflix.Notify.warning('No contacts matching your request', notifySettings);\n      return [];\n    }\n    return filteredContacts;\n  };\n\n  const handleDeleteContact = (id, name) => {\n    dispatch(deleteContact(id));\n    Notiflix.Notify.info(`${name} was successfully deleted from your contacts`, notifySettings);\n  };\n\n  return (\n    <List>\n      {filterContacts().map(contact => {\n        return (\n          <ContactItem\n            id={contact.id}\n            key={contact.id}\n            name={contact.name}\n            number={contact.number}\n            onDeleteBtnClick={() =>\n              handleDeleteContact(contact.id, contact.name)\n            }\n          />\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  min-width: 600px;\n  display: flex;\n  justify-content: stretch;\n  align-items: center;\n  font-size: 32px;\n  color: #010101;\n  padding: 24px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: #5f5c59 solid 2px;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n`;","import styled from 'styled-components';\nimport { DebounceInput } from 'react-debounce-input';\nimport { FilterWrapper } from './Filter.styled';\nimport { Label } from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nconst FilterInput = styled(DebounceInput)`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 20px;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <FilterWrapper>\n      <Label>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter contact to search\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.target.value))}\n          debounceTimeout={500}\n        />\n      </Label>\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n  padding: 40px;\n`;\n\nexport const MainHeader = styled.h1`\n  font-size: 42px;\n  color: #010101;\n  text-transform: uppercase;\n`;\n\nexport const SubHeader = styled.h2`\n  font-size: 36px;\n  color: #010101;\n  text-transform: uppercase;\n`;","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/selectors';\nimport { Container, MainHeader, SubHeader } from './Contacts.styled';\n\nexport const Contacts = () => {\n  const loader = useSelector(selectIsLoading);\n  return (\n    <Container>\n      {loader && <Loader />}\n      <MainHeader>Phonebook</MainHeader>\n      <ContactForm />\n      <SubHeader>Contacts</SubHeader>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};"],"names":["BtnElement","styled","_templateObject","_taggedTemplateLiteral","props","status","ButtonForm","_ref","text","_ref$disabled","disabled","_ref$icon","icon","Icon","_ref$type","type","_ref$onClick","onClick","_ref$onSubmit","onSubmit","_jsxs","children","_jsx","Form","Label","_templateObject2","Input","InputItem","name","placeholder","pattern","title","onChange","value","required","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","onInputChange","event","target","resetForm","preventDefault","find","contact","toLocaleLowerCase","Notiflix","concat","notifySettings","addContact","MdPersonAddAlt","List","ListItem","ListItemData","ContactItem","id","onDeleteBtnClick","MdPersonRemoveAlt1","ContactList","useEffect","fetchContacts","filter","selectFilter","query","filteredContacts","includes","length","filterContacts","map","deleteContact","FilterWrapper","FilterInput","DebounceInput","Filter","e","filterContact","debounceTimeout","Container","MainHeader","SubHeader","_templateObject3","Contacts","loader","selectIsLoading","Loader"],"sourceRoot":""}